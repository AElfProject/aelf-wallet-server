// Alert 弹窗
function AlertPop(options) {
    var self = this;
    var defaults = {
        title: '<span class="fs-16">标题</span>',
        content: '<article class="fs-14">内容</article>',
        closebtn : true,
        autohide: false,
        status: 'warning',
        btns : [
            // node, [name, href, target], isClose, callback
            //['div.btn.btn-md.btn-warning', ['No'], true, null]
        ]
    };
    this.ele = {};
    this.settings = $.extend({}, defaults, options);
    this.init();
    return this;
}
AlertPop.prototype = {
    nodeSplit: function(str){
        var ay = str.split('.'),
            nodeName = ay[0],
            className = '';
        if(ay.length > 1){
            for(var j=1; j<=ay.length-1; j++){
                className += className+' '+ay[j];
            }
        }
        return {
            nodeName : nodeName,
            className : className
        };
    },
    init: function(){
        var self = this;
        self.ele.alertPopMask = '<div class="alert-pop-mask"></div>';
        self.ele.alertPopClose = self.settings.closebtn ? '<div class="alert-pop-close"><span class="close"><i></i><i></i></span></div>' : '';

        self.ele.alertPopBox = '';
        if(self.settings.title != false || self.settings.title != ''){
            self.ele.alertPopBox += '<div class="alert-pop-title">'+ self.settings.title +'</div>';
        }
        if(self.settings.content != false || self.settings.content != ''){
            self.ele.alertPopBox += '<div class="alert-pop-content">'+ self.settings.content +'</div>';
        }
        if(self.settings.btns != false || self.settings.btns != '' || self.settings.btns.length > 0){
            self.ele.alertPopBox += '<div class="alert-pop-btns clearfix"></div>';
        }
        self.ele.alertPopBox = '<div class="alert-pop-box"><div class="alert-pop-wrapper">'+ self.ele.alertPopBox +'</div></div>';

        self.ele.alertPopHtml = $('<div class="alert-pop alert-pop-'+ self.settings.status +'">'+ self.ele.alertPopMask + self.ele.alertPopClose + self.ele.alertPopBox +'</div>');

        for(var i=0; i<= self.settings.btns.length-1; i++) {
            var btnNode = self.settings.btns[i][0],
                btnInfo = self.settings.btns[i][1];

            var nodeName = self.nodeSplit(btnNode).nodeName,
                className = self.nodeSplit(btnNode).className;

            var btnHtml = '';
            if(btnInfo[1] != '' && btnInfo[1] != undefined) {
                btnHtml = $('<'+ nodeName +' href="'+ btnInfo[1] +'" target="'+ btnInfo[2] +'" class="alert-pop-btn '+ className +'" style="width:'+ (100 / self.settings.btns.length) +'%">'+ btnInfo[0] +'</'+ nodeName +'>');
            }else{
                btnHtml = $('<'+ nodeName +' class="alert-pop-btn '+ className +'" style="width:'+ (100 / self.settings.btns.length) +'%">'+ btnInfo[0] +'</'+ nodeName +'>');
            }
            self.ele.alertPopHtml.find('.alert-pop-btns').append(btnHtml);
        }

        $('body').append(self.ele.alertPopHtml);

        self.events();
        self.btnEvents(self.settings.btns);
        self.hideAuto();
    },
    hideAuto: function(){
        var self = this;
        if(self.settings.autohide != false || self.settings.autohide != ''){
            setTimeout(function(){
                self.destory();
            }, self.settings.autohide);
        }
    },
    btnEvents: function(btns){
        var self = this;
        var btnFn = function(i){
            self.ele.alertPopHtml.find('.alert-pop-btn').eq(i).bind('click', function(){
                if(btns[i][3] != null) {
                    btns[i][3](self);
                }
                if(btns[i][2]){
                    self.destory();
                }
            });
        };
        for(var i=0; i<= btns.length-1; i++) {
            btnFn(i);
        }
    },
    events: function(){
        var self = this;
        self.ele.alertPopHtml.find('.alert-pop-mask, .alert-pop-close').bind('click', function(){
            self.destory();
        });
    },
    destory: function(){
        var self = this;
        self.ele.alertPopHtml.fadeOut(function(){
            self.ele.alertPopHtml.remove();
        });
    }
};
;// loadingPop
function ToastPop(options) {
    var self = this;
    var defaults = {
        status: 'success',
        content: '<span class="color-white fs-20 ta-c">加载中……</span>',
        autohide: false,
        animateIn: 'fadeIn',
        animateOut: 'fadeOut',
        callback: false,
        contentfixed: true,
        width: '100%',
        height: '100%'
    };
    this.settings = $.extend({}, defaults, options);
    this.ele = {};
    this.init();
    return this;
}
ToastPop.prototype = {
    init: function(){
        var self = this;
        self.ele.toastPop = $('<div class="pop-toast '+ (self.settings.contentfixed ? 'pop-toast-no-static' : 'pop-toast-static') +' pop-toast-'+ self.settings.status +'" style="width:'+ self.settings.width +'; height:'+ self.settings.height +';"><div class="pop-toast-box">'+ self.settings.content +'</div></div>');

        $('body').append(self.ele.toastPop);
        setTimeout(function(){
            if(self.settings.callback != '' && self.settings.callback != false && self.settings.callback != 'none'){
                self.settings.callback(self);
            }
            self.autohide();
        }, 100);
    },
    autohide: function(){
        var self = this;
        if(self.settings.autohide != '' && self.settings.autohide != false && self.settings.autohide != 'none'){
            setTimeout(function(){
                self.destory();
            }, self.settings.autohide);
        }
    },
    destory: function(){
        var self = this;
        $(self.ele.toastPop).fadeOut(function(){
            $(self.ele.toastPop).remove();
        });
    }
};
;// tipPop
function TipPop(options) {
    var self = this;
    var defaults = {
        content: '可手动关闭弹窗',
        position: 'top',
        closebtn: true,
        autohide: false,
        animateIn: 'bounce',
        animateOut: 'fadeOutUp',
        status: 'success'
    };
    this.settings = $.extend({}, defaults, options);
    this.init();
    return this;
}
TipPop.prototype = {
    init: function(){
        var self = this;
        if(self.settings.closebtn){
            self.tipPopHtml = $('<div class="tip-box tip-close tip-'+self.settings.status +' clearfix">'+ self.settings.content + '<span class="tip-close-btn btn btn-circle btn-sm"><i class="fa fa-times"></i></span></div>');
        }else{
            self.tipPopHtml = $('<div class="tip-box tip-'+self.settings.status +' clearfix">'+ self.settings.content +'</div>');
        }


        if(self.settings.animateIn != '' || self.settings.animateIn != 'none' || self.settings.animateIn != false){
            self.tipPopHtml.addClass('animated '+self.settings.animateIn)
        }
        $('body').append(self.tipPopHtml);

        self.position();
        self.events();
        self.hideAuto();
    },
    position: function(){
        var self = this;
        if(self.settings.position == 'top') {
            self.tipPopHtml.css({
                'top': '0'
            });
        }else {
            self.tipPopHtml.css({
                'bottom': '0'
            });
        }
    },
    hideAuto: function(){
        var self = this;
        if(self.settings.autohide != false && self.settings.autohide != '') {
            setTimeout(function(){
                self.destory();
            }, self.settings.autohide);
        }
    },
    events: function(){
        var self = this;
        self.tipPopHtml.find('.tip-close-btn').bind('click', function(){
            self.destory();
        });
    },
    destory: function(){
        var self = this;
        if(self.settings.animateIn == '' || self.settings.animateIn == 'none' || self.settings.animateIn == false){
            self.tipPopHtml.remove();
        }
        else {
            self.tipPopHtml.removeClass(self.settings.animateIn).addClass(self.settings.animateOut);
            setTimeout(function(){
                self.tipPopHtml.remove();
            }, 1000);
        }
    }
};
;/*
 * legend common plugin
 * Author: lijundong
 */

function Legend() {
  return this;
}
Legend.prototype.init = function(){
    this.tipClose();
    this.pop.init();
};


Legend.prototype.setCookie = function(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+d.toUTCString();
    document.cookie = cname + "=" + cvalue + "; " + expires;
};
Legend.prototype.getCookie = function(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1);
        if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
    }
    return "";
};
Legend.prototype.delCookie = function(name) {
    this.setCookie(name, "", -1);
};


Legend.prototype.pop = {
    size : function(){
        $('.com-pop').css({
            height: 'auto'
        });
        var h = $('.com-pop').outerHeight(true);
        if(h > $(window).height()){
            h = $(window).height();
        }
        if(h % 2 !== 0){
            $('.com-pop').css({
                height: h+1
            })
        }
    },
    close : function(){
        $('.com-pop, .com-pop-mask').fadeOut();
    },
    open : function(ele){
        var _this = this;
        if(ele != ''){
            $('.change-'+ ele).show().siblings().hide();
        }else{
            $('.change-name').eq(0).show().siblings().hide();
        }
        $('.com-pop, .com-pop-mask').fadeIn(function(){
            _this.size();
        });
    },
    init: function(){
        var _this = $(this);
        $('.com-pop-close, .com-pop-mask').bind('click', function(){
            _this.close();
        });
    }
};


Legend.prototype.alertPop = function(options){
    var alertPop = new AlertPop(options);
    return alertPop;
};


Legend.prototype.tipPop = function(options){
    var tipPop = new TipPop(options);
    return tipPop;
};


Legend.prototype.toastPop = function(options){
    var toast = new ToastPop(options);
    return toast;
};


Legend.prototype.evenHeight = function(ele){
    $(ele).outerHeight('auto');
    var h = $(ele).outerHeight();
    if(h >= $(window).height()){
        $(ele).outerHeight($(window).height());
    }
    if(h % 2 != 0){
        $(ele).outerHeight(h+1);
    }
};


Legend.prototype.tipClose = function(options){
    var defaults = {
        animateIn: 'fadeIn',
        animateOut: 'fadeOut'
    };
    var settings = $.extend({}, defaults, options);
    $('body .tip-close').each(function(){
        $(this).bind('click', function(){
            $(this).parent().removeClass(settings.animateIn).addClass(settings.animateOut);
            setTimeout(function(){
                $(this).parent().remove();
            }, 1000);
        });
    });
};


;(function($){
    window.legend = new Legend();
    var time = null;
    $(window).resize(function(){
        clearTimeout(time);
        time = setTimeout(function(){
        legend.pop.size();
        });
    });
})(jQuery);
